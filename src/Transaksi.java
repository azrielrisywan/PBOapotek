/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hp
 */
import java.text.NumberFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


public class Transaksi extends javax.swing.JFrame {
   
    DefaultTableModel modelTabelObat;
    DefaultTableModel modelTabelDetailTransaksi;
    public int count = 0;
    /**
     * Creates new form Transaksi
     */    
    
    public Transaksi() {
        initComponents();
        String[] judulTabelObat = {"ID", "Nama Obat"};
        String[] judulTabelDetailTransaksi = {"ID Transaksi", "Nama Obat", "Jumlah"};
        modelTabelObat = new DefaultTableModel(judulTabelObat, 0);
        modelTabelDetailTransaksi = new DefaultTableModel(judulTabelDetailTransaksi, 0);
        tabelDetailTransaksi.setModel(modelTabelDetailTransaksi);
        listObatTersedia.setModel(modelTabelObat);
        tampilkanDataObat();
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tambahDetails = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        namaObat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        idObatDetailTransaksi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaObatDetailTransaksi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jumlahObatDetailTransaksi = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelDetailTransaksi = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        listObatTersedia = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        tambahbtn1 = new javax.swing.JButton();
        update_btn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        dashboard = new javax.swing.JMenu();
        tambahObat = new javax.swing.JMenu();
        tambahKaryawan = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("APOTEK MAJU TERUS");

        tambahDetails.setText("Tambah Barang");
        tambahDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahDetailsActionPerformed(evt);
            }
        });

        delete_btn.setText("Delete");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel7.setText("Detail Transaksi");

        namaObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaObatActionPerformed(evt);
            }
        });
        namaObat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                namaObatKeyReleased(evt);
            }
        });

        jLabel1.setText("Cari");

        idObatDetailTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idObatDetailTransaksiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel8.setText("Obat Tersedia");

        jLabel3.setText("id");

        jLabel4.setText("nama");

        jLabel5.setText("jumlah");

        jumlahObatDetailTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahObatDetailTransaksiActionPerformed(evt);
            }
        });

        tabelDetailTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelDetailTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDetailTransaksiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelDetailTransaksi);

        listObatTersedia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listObatTersedia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listObatTersediaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listObatTersedia);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tambahbtn1.setText("Tambah Transaksi");
        tambahbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahbtn1ActionPerformed(evt);
            }
        });

        update_btn.setText("Update Jumlah");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });

        menuBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dashboard.setText("Dashboard");
        dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMouseClicked(evt);
            }
        });
        menuBar.add(dashboard);

        tambahObat.setText("Obat");
        tambahObat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tambahObatMouseClicked(evt);
            }
        });
        menuBar.add(tambahObat);

        tambahKaryawan.setText("Karyawan");
        tambahKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tambahKaryawanMouseClicked(evt);
            }
        });
        menuBar.add(tambahKaryawan);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tambahDetails)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(tambahbtn1))
                                            .addComponent(idObatDetailTransaksi, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(namaObatDetailTransaksi, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jumlahObatDetailTransaksi, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(delete_btn)
                                .addGap(124, 124, 124)
                                .addComponent(update_btn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namaObat, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(namaObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                .addGap(168, 168, 168))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(idObatDetailTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(namaObatDetailTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jumlahObatDetailTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tambahDetails)
                                    .addComponent(tambahbtn1))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(delete_btn)
                                    .addComponent(update_btn))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahDetailsActionPerformed
        //
        String idObat = idObatDetailTransaksi.getText();
        String namaObat = namaObatDetailTransaksi.getText();
        String jumlahObat = jumlahObatDetailTransaksi.getText();
        if (jumlahObatDetailTransaksi.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Jumlah Obat Tidak Boleh Kosong !!!!!");
        } else {

        try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            // INSERT DATA TO TRANSAKSI
            cn.createStatement().executeUpdate("insert into cart(nama_obat,jumlah_obat) values('"+ namaObat + "','" + jumlahObat + "')");
            reset();
//            ResultSet getIdCart = cn.createStatement().executeQuery("SELECT id_cart from cart");
//            getIdCart.next();
//            getIdCart.getString(1);
            DefaultTableModel model = (DefaultTableModel) tabelDetailTransaksi.getModel();
            count++;
            String[] data = {String.valueOf(count),namaObat,jumlahObat};
            modelTabelDetailTransaksi.addRow(data); 
            
            

            

        }catch (SQLException ex){
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
    }//GEN-LAST:event_tambahDetailsActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        //
        DefaultTableModel model = (DefaultTableModel) tabelDetailTransaksi.getModel();
        boolean deleted = true;
          try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            int SelectedRowIndex = tabelDetailTransaksi.getSelectedRow();
            int rowSQL = SelectedRowIndex+1;
            String cell = tabelDetailTransaksi.getModel().getValueAt(SelectedRowIndex,0).toString();
            cn.createStatement().executeUpdate("DELETE FROM cart WHERE id_cart = '" + cell +"'");
            model.removeRow(SelectedRowIndex);
        }catch (SQLException ex){
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMouseClicked
        // TODO add your handling code here:
        Dashboard d = new Dashboard();
        d.setVisible(true);
        d.setDefaultCloseOperation(Dashboard.DISPOSE_ON_CLOSE);
        d.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_dashboardMouseClicked

    private void tambahObatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahObatMouseClicked
        // TODO add your handling code here:
        Obat o = new Obat();
        o.setVisible(true);
        o.setDefaultCloseOperation(Obat.DISPOSE_ON_CLOSE);
        o.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_tambahObatMouseClicked

    private void tambahKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahKaryawanMouseClicked
        // TODO add your handling code here:
        Karyawan k = new Karyawan();
        k.setVisible(true);
        k.setDefaultCloseOperation(Karyawan.DISPOSE_ON_CLOSE);
        k.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_tambahKaryawanMouseClicked

    private void namaObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaObatActionPerformed

    private void jumlahObatDetailTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahObatDetailTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahObatDetailTransaksiActionPerformed

    private void namaObatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaObatKeyReleased
        // TODO add your handling code here:
        DefaultTableModel filteredModel = (DefaultTableModel)listObatTersedia.getModel();
        String search = namaObat.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(filteredModel);
        listObatTersedia.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + search));
    }//GEN-LAST:event_namaObatKeyReleased

    private void listObatTersediaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listObatTersediaMouseClicked
        // TODO add your handling code here:
        int i = listObatTersedia.getSelectedRow();
        
        if(i>-1){
            idObatDetailTransaksi.setText(listObatTersedia.getValueAt(i, 0).toString());
            namaObatDetailTransaksi.setText(listObatTersedia.getValueAt(i, 1).toString());
        }
    }//GEN-LAST:event_listObatTersediaMouseClicked

    private void idObatDetailTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idObatDetailTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idObatDetailTransaksiActionPerformed

    private void tambahbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahbtn1ActionPerformed
        // TODO add your handling code here:
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            
            // Ambil Data From DB Cart
            int i = 1;
            int harga;
            String[] getNamaObat;
            
            // Hitung Perkalian
            boolean done = false;
            int hargaTotal = 0;
            ResultSet cartStatement = cn.createStatement().executeQuery("SELECT nama_obat FROM cart");
            while(cartStatement.next()){
                 String[] tempNamaObat  = {cartStatement.getString(1)};
                 for(String strTemp : tempNamaObat){
                    ResultSet getJumlahObat = cn.createStatement().executeQuery("SELECT jumlah_obat FROM cart WHERE nama_obat = '" + strTemp +"'");
                    while(getJumlahObat.next()){
                        int cartJumlahObat = getJumlahObat.getInt(1);
                        ResultSet rs = cn.createStatement().executeQuery("SELECT harga_satuan FROM obat WHERE nama_obat = '" + strTemp +"'");
                        while(rs.next()){
                            harga = rs.getInt(1)*cartJumlahObat;
                            hargaTotal += harga;
                            ResultSet stock_obat = cn.createStatement().executeQuery("SELECT jumlah_stok FROM obat WHERE nama_obat = '" + strTemp +"'");
                            while(stock_obat.next()){
                                // CEK JUMLAH STOCK
                                if(stock_obat.getInt(1)!=0){
                                    int obatStockJumlahObat = stock_obat.getInt(1);
                                    int newStock = obatStockJumlahObat - cartJumlahObat;
//                                    System.out.println("Check Stock " + strTemp + " "+ newStock);
                                    int updateStockObat = cn.createStatement().executeUpdate("UPDATE OBAT SET jumlah_stok = '" + newStock +"' WHERE nama_obat = '" + strTemp +"'  ");                                
                                }else{
                                    JOptionPane.showMessageDialog(null, "Stock Habis");
                                }
                                // Update DB transaksi        
                                int batas = tabelDetailTransaksi.getRowCount();
                                for (int x=0;x<batas;x++){
                                    String getValueRowNamaObat = String.valueOf(tabelDetailTransaksi.getValueAt(x,1));
                                    ResultSet getIdObat = cn.createStatement().executeQuery("SELECT id FROM obat WHERE nama_obat = '"+getValueRowNamaObat+"'");
                                    System.out.println(getIdObat);
                                    while(getIdObat.next()){
                                    int insertTransaksi = cn.createStatement().executeUpdate("INSERT INTO transaksi(id_obat,total_bayar,jumlah) values('"+ getIdObat.getInt(1) + "','" + hargaTotal + "','" + cartJumlahObat + "')");
                                    System.out.println(insertTransaksi);
                                    }
                                    
                                }
                            }
                        }
                    }
                 }
            }
            // Delete Temp DB cart 
//            cn.createStatement().executeUpdate("ALTER TABLE cart AUTO_INCREMENT = 1");
            Statement s = cn.createStatement();            
            cn.createStatement().executeUpdate("DELETE FROM cart");
            //Reset TextField
            idObatDetailTransaksi.setText(null);
            namaObatDetailTransaksi.setText(null);
            jumlahObatDetailTransaksi.setText(null);
            // Tampilkan JOPtionPane Harga Total
            
            DecimalFormat currencyIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();
            
            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            currencyIndonesia.setDecimalFormatSymbols(formatRp);
            JOptionPane.showMessageDialog(null, "Total Transaki Obat : " + currencyIndonesia.format(hargaTotal));
            DefaultTableModel model = (DefaultTableModel) tabelDetailTransaksi.getModel();
            model.setRowCount(0);
        } catch (SQLException ex) {
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_tambahbtn1ActionPerformed

    private void tabelDetailTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDetailTransaksiMouseClicked
        // TODO add your handling code here:
        int i = tabelDetailTransaksi.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tabelDetailTransaksi.getModel();
  
        if(i>-1){
            idObatDetailTransaksi.setText(model.getValueAt(i, 0).toString());
            namaObatDetailTransaksi.setText(model.getValueAt(i, 1).toString());
            jumlahObatDetailTransaksi.setText(model.getValueAt(i, 2).toString());
        }
    }//GEN-LAST:event_tabelDetailTransaksiMouseClicked

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // TODO add your handling code here:
        try{
        DriverManager.registerDriver(new com.mysql.jdbc.Driver());
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
        int batas = tabelDetailTransaksi.getRowCount();
        for (int x=0;x<batas;x++){
            String getValueIdCart = String.valueOf(tabelDetailTransaksi.getValueAt(x,0));
            cn.createStatement().executeUpdate("UPDATE cart SET jumlah_obat = '" + jumlahObatDetailTransaksi.getText()+ "' WHERE id_cart = '" + idObatDetailTransaksi.getText() + "'");
        }
        
        reset();
        refresh();
        
        }catch(Exception E){
            
        }
    }//GEN-LAST:event_update_btnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            Statement s = cn.createStatement(); 
            int executeUpdate = s.executeUpdate("ALTER TABLE cart AUTO_INCREMENT = 1");
        }catch (SQLException ex){
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
          try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            Statement s = cn.createStatement(); 
            int executeUpdate = s.executeUpdate("ALTER TABLE cart AUTO_INCREMENT = 1");
        }catch (SQLException ex){
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing
    private void reset(){
        //            
        idObatDetailTransaksi.setText(null);
        namaObatDetailTransaksi.setText(null);
        jumlahObatDetailTransaksi.setText(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Obat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Obat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Obat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Obat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Transaksi t = new Transaksi();
                t.setVisible(true);
                t.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu dashboard;
    private javax.swing.JButton delete_btn;
    private javax.swing.JTextField idObatDetailTransaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jumlahObatDetailTransaksi;
    private javax.swing.JTable listObatTersedia;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField namaObat;
    private javax.swing.JTextField namaObatDetailTransaksi;
    private javax.swing.JTable tabelDetailTransaksi;
    private javax.swing.JButton tambahDetails;
    private javax.swing.JMenu tambahKaryawan;
    private javax.swing.JMenu tambahObat;
    private javax.swing.JButton tambahbtn1;
    private javax.swing.JButton update_btn;
    // End of variables declaration//GEN-END:variables

    private void tampilkanDataObat() {
        int row = listObatTersedia.getRowCount();
        for (int a = 0; a<row; a++){
            modelTabelObat.removeRow(0);
        }
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT id, nama_obat FROM obat");
            while(rs.next()){
                String data []= {rs.getString(1), rs.getString(2)};
                modelTabelObat.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void tampilkanDetailTransaksi() {
        int row = tabelDetailTransaksi.getRowCount();
        for (int a = 0; a<row; a++){
            modelTabelDetailTransaksi.removeRow(0);
        }
//        try {
//            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
//            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
//            ResultSet rs = cn.createStatement().executeQuery("SELECT transaksi_details.obat_id, obat.nama_obat, transaksi_details.jumlah "
//                                                           + "FROM transaksi_details "
//                                                           + "INNER JOIN obat ON transaksi_details.obat_id = obat.id");
//            while(rs.next()){
//                String data []= {rs.getString(1), rs.getString(2), rs.getString(3)};
//                modelTabelDetailTransaksi.addRow(data);
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
    private void refresh(){
        int row = tabelDetailTransaksi.getRowCount();
        for (int a = 0; a<row; a++){
            modelTabelDetailTransaksi.removeRow(0);
        }
          try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/apotek", "root", "");
            ResultSet ref = cn.createStatement().executeQuery("SELECT * FROM cart");
            while(ref.next()){
                String data [] = {ref.getString(1),ref.getString(2),ref.getString(3)};
                modelTabelDetailTransaksi.addRow(data);
            }
        }catch (SQLException ex){
            Logger.getLogger(Obat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
